{"version":3,"sources":["components/Signup.js","components/Signin.js","components/EachMessage.js","components/ActiveUser.js","components/Sidebar.js","components/Message.js","components/Home.js","components/User.js","components/Logout.js","components/NotFound.js","App.js","serviceWorker.js","index.js","config.js","utils/server.js"],"names":["Signup","submitHandler","e","preventDefault","data","target","firstName","value","lastName","email","address","contact","password","Axios","post","SERVER","URL","then","res","setState","msg","style","margin","maxWidth","to","className","catch","result","state","color","method","onSubmit","this","htmlFor","required","type","placeholder","id","name","minLength","padding","React","Component","Signin","localStorage","setItem","token","props","history","push","Fragment","EachMessage","deleteMessage","delete","message","headers","getItem","fetchData","err","console","log","classStr","sender","senderId","onClick","senderName","text","time","src","alt","ActiveUser","user","marginBottom","position","height","width","borderRadius","display","border","fontSize","marginTop","top","marginBlockStart","marginBlockEnd","verticalAlign","userName","background","right","bottom","Sidebar","activeUsers","maxHeight","document","body","clientHeight","getElementById","offsetHeight","borderBottom","textAlign","length","listStyleType","paddingLeft","map","key","socketId","userId","nextProps","prevState","Message","JSON","stringify","note","undefined","get","active","socket","io","connect","require","query","on","clients","users","Array","isArray","encType","renderList","messageScroller","scrollTop","scrollHeight","disconnect","Home","User","fetchProfile","profile","passwordChangeHandler","password2","pwErr","patch","put","resetHandler","changeHandler","window","location","pathname","slice","userProfile","textShadow","float","textDecoration","role","updateProfile","privateMessage","onReset","onChange","clear","NotFound","App","setPage","page","basename","path","component","Logout","Boolean","hostname","match","dotenv","config","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","process","ENV_MODE","dbname","host","port","module","exports"],"mappings":"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","file":"static/js/main.78557fea.chunk.js","sourcesContent":["import React from 'react';\nimport {SERVER} from '../utils/server';\nimport Axios from 'axios';\nimport {\n    Link\n} from \"react-router-dom\";\nexport default class Signup extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            msg: ''\n        }\n    }\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"sidenav\">\n                    <div className=\"login-main-text\">\n                        <Link to=\"/\">\n                            <h2 style={{ color: \"white\" }}> MessageAll </h2>\n                        </Link>\n                        <p>Please Login or Register to access.</p>\n                    </div>\n                </div>\n                <div className=\"signupMain\">\n                    <form method=\"POST\" onSubmit={this.submitHandler}>\n                        <h2>\n                            Signup for MessageAll\n                        </h2>\n                        <div className=\"form-row\">\n                            <div className=\"form-group half\">\n                                <label htmlFor=\"firstName\">First Name</label>\n                                <input required type=\"text\" placeholder=\"Enter First Name\" className=\"form-control\" id=\"firstName\" name=\"firstName\"></input>\n                            </div>\n                            <div className=\"form-group half\">\n                                <label htmlFor=\"lastName\">Last Name</label>\n                                <input required type=\"text\" placeholder=\"Enter Last Name\" className=\"form-control\" id=\"lastName\" name=\"lastName\"></input>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input required type=\"email\" placeholder=\"Enter Email\" className=\"form-control\" id=\"email\" name=\"email\"></input>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input required type=\"password\" minLength=\"8\" placeholder=\"Enter password\" className=\"form-control\" id=\"password\" name=\"password\"></input>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"address\">Address</label>\n                                <input required type=\"text\" placeholder=\"Enter Address\" className=\"form-control\" id=\"address\" name=\"address\"></input>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"contact\">Contact</label>\n                                <input required type=\"text\" placeholder=\"Enter contact\" className=\"form-control\" id=\"contact\" name=\"contact\"></input>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"Sign Up\" className=\"btn btn-primary btn-block\"></input>\n                            </div>\n                            <p>\n                                Already have an account?\n                                <Link to=\"/signin\">\n                                    <span style={{ padding: \"1em\", color:\"rgb(28,138,219)\"}}>Signin</span>\n                                </Link>\n                            </p>\n                            <div style={{ color: \"#a33\" }}>\n                                {this.state.msg ? <div>{this.state.msg}</div> : ''}\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                \n            </div>\n        )\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        const data = {\n            'firstName': e.target.firstName.value,\n            'lastName': e.target.lastName.value,\n            'email': e.target.email.value,\n            'address': e.target.address.value,\n            'contact': e.target.contact.value,\n            'password': e.target.password.value\n        }  \n        Axios.post(SERVER.URL+'/user/signup', data)\n            .then(\n                res => {\n                    this.setState({\n                        msg: \n                        <div>\n                            <p>Account created successfully! Please login..</p>\n                            <div style={{ margin: \"1em auto\", maxWidth: \"7.5em\" }}>\n                                <Link to=\"/signin\">\n                                    <div className=\"btn\">\n                                        Signin\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    });\n                }\n            )\n            .catch(result => {\n                this.setState({\n                    msg: \"Error occured!\",\n                });\n            })\n    }\n}","import React from \"react\";\nimport \"../styles/form.css\";\nimport {SERVER} from \"../utils/server\"\n\nimport {\n    Link\n} from \"react-router-dom\";\nimport Axios from \"axios\";\n\nexport default class Signin extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            msg: ''\n        }\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                <div className=\"sidenav\">\n                    <div className=\"login-main-text\">\n                        <Link to=\"/\">\n                            <h2 style={{color:\"white\"}}> MessageAll </h2>\n                        </Link>\n                        <p>Please Login or Register to access.</p>\n                    </div>\n                </div>\n                <div className=\"signinMain\">\n                    <form method=\"POST\" onSubmit={this.submitHandler}>\n                        <h2>\n                            Signin to MessageAll\n                        </h2>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input id=\"email\" type=\"email\" required className=\"form-control\" placeholder=\"Your Email\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input id=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" />\n                        </div>\n                        <input type=\"submit\" className=\"btn-primary btn\" value=\"Login\" />\n                        <Link to=\"/signup\">\n                            <input type=\"reset\" className=\"btn-black \" value=\"Register\" />\n                        </Link>\n                        <div style={{color: \"#a33\"}}>\n                            {this.state.msg ? <label>{this.state.msg}</label> : ''}\n                        </div>\n                    </form>\n                </div>\n            </React.Fragment>  \n        );\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        Axios.post(SERVER.URL + \"/user/signin\", { email: e.target.email.value, password: e.target.password.value} )\n            .then(result => {\n                localStorage.setItem('token', result.data.token);\n                localStorage.setItem('userId', result.data.id);\n                localStorage.setItem('userName', result.data.firstName+\" \"+result.data.lastName);\n                this.props.history.push('/message');\n            })\n            .catch(result => {\n                this.setState({\n                    msg: \"Invalid username or password!\",\n                });\n            })\n\n    }\n    \n}","import React from \"react\"\nimport '../styles/eachMessage.css';\nimport Axios from \"axios\";\nimport { SERVER } from \"../utils/server\";\nimport {\n    Link\n} from \"react-router-dom\";\n\nexport default class EachMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: this.props.message\n        }\n    }\n\n    render() {\n        let classStr = \"\";\n        let sender = false;\n\t    /* eslint eqeqeq: 0 */\n        if (this.state.message.senderId == localStorage.getItem('userId')) // one string one number\n        {\n            classStr = \" sender\";\n            sender = true;\n        }\n        // else {\n        //     console.log(typeof this.state.message.senderId + \"  \" + typeof localStorage.getItem('userId'));\n        // }\n\n        return (\n                <React.Fragment>\n\n                {!sender ? (\n                    <div className = { classStr + \" messageRow row\"} >\n\n                            <div className=\"profile col-md-2\">\n                                <Link to={\"/user/\" + this.state.message.senderId} >\n                                    <img src=\"./images/depositphotos_59095529-stock-illustration-profile-icon-male-avatar.jpg\" alt=\"profile\" />\n                                </Link>\n                            </div>\n                            <div className=\"col-md-9 messageBubble\">\n\n                                <b>{this.state.message.senderName}</b>\n                                <span className=\"time\">{this.state.message.time}</span>\n                                <p>\n                                    {this.state.message.text}\n                                </p>\n                            </div>\n                    </div>\n                ) : (\n                        <div className={classStr + \" messageRow row\"} >\n\n\n                            <div className=\"col-md-9 messageBubble\">\n\n                                <div className=\"col-md-1\" onClick={this.deleteMessage}>\n                                    <div className='cross'>X</div>\n                                </div>\n\n                                <b>{this.state.message.senderName}</b>\n                                <p>\n                                    {this.state.message.text}\n                                </p>\n                                <span className=\"time\">{this.state.message.time}</span>\n                            </div>\n\n                            <div className=\"profile col-md-2\">\n                                <Link to={\"/user/\" + this.state.message.senderId} >\n                                    <img src=\"./images/depositphotos_59095529-stock-illustration-profile-icon-male-avatar.jpg\" alt=\"profile\" />\n                                </Link>\n                            </div>\n                        </div>\n                )}\n                </React.Fragment>\n        )\n    }\n\n    deleteMessage = e => {\n        Axios.delete(SERVER.URL + \"/message/delete/\" + this.state.message.id, {\n            headers: {\n                'token': localStorage.getItem('token') || ''\n            }\n        })\n            .then(res => {\n                this.props.fetchData();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}\n","import React from 'react'\n\nexport default class ActiveUser extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            user : props.user\n        }\n    }\n    render(){\n        return (\n            <div style={{marginBottom:\"0.25em\", position:\"relative\", height:\"100%\"}}>\n                <img style={{width:\"20%\", borderRadius:\"50%\", display:\"inline-block\", border:\"1px solid grey\"}} src=\"./images/depositphotos_59095529-stock-illustration-profile-icon-male-avatar.jpg\" alt=\"User\"/>\n                <div style={{ display: \"inline-block\", height:\"100%\"}}>\n                    <p style={{ height: \"100%\", fontSize: '1.75vw' , marginTop: \"0em\", position: \"absolute\", top: '10%', marginBlockStart: \"0px\", marginBlockEnd: \"0px\", verticalAlign:\"base\", display:'inline', padding:'2.5%'}}>\n                        {this.state.user.userName}\n                    </p>\n                    <div style={{ width: \"1vw\", height: \"1vw\" , background:\"green\", borderRadius:\"50%\", position:\"absolute\", right:\"1em\", bottom:\"50%\" }}></div>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport ActiveUser from './ActiveUser';\n\nexport default class Sidebar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            activeUsers: props.activeUsers\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.activeUsers !== prevState.activeUsers){\n            return ({activeUsers: nextProps.activeUsers});\n        }\n        return null;\n    }\n\n    render(){\n        return (\n            <div className=\"sidebar\">\n                <div className=\"profile\" id=\"sideProfile\">\n                    \n                    <div className=\"home\">\n                        <Link to=\"/\"><img src=\"./images/flat-blue-home-icon-4.png\" alt=\"Home\" /></Link>\n                    </div>\n                    <div className=\"logout\">\n                        <Link to=\"/logout\"><img src=\"./images/276363.png\" alt=\"Logout\" /></Link>\n                    </div>\n                    <Link to={\"/user/\" + localStorage.getItem('userId')} >\n                        <img src=\"./images/depositphotos_59095529-stock-illustration-profile-icon-male-avatar.jpg\" alt=\"profile\" />\n                        <h2>{localStorage.getItem('userName')}</h2>\n                    </Link>\n                    {\n                        localStorage.getItem('token')? \"\" : (\n\n                            <Link to=\"/signin\">\n                                <div className=\"btn\">\n                                    Signin\n                                </div>\n                            </Link>\n                        )\n                    }\n                </div>\n                \n                <div className=\"users\" style={{ maxHeight: document.body.clientHeight - (document.getElementById('sideProfile') ? document.getElementById('sideProfile').offsetHeight : 0) }}>\n                    <h4 style={{borderBottom: '1px solid grey', padding:'1em', textAlign:'center'}}>{\"Online Users(\"+this.state.activeUsers.length+\")\"}</h4>\n                    <ul style={{ listStyleType: 'none', paddingLeft: '1.25em'}}>\n                        {\n                            // console.log(typeof this.state.activeUsers, this.state.activeUsers)\n                            this.state.activeUsers.map( user => {\n                                return <li key={user.socketId}> \n                                    <Link to={\"/user/\"+user.userId}>\n                                        <ActiveUser user={user} />\n                                    </Link>\n                                </li>\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n\n    }\n}","import React from \"react\";\nimport Axios from \"axios\";\nimport { SERVER } from \"../utils/server\";\nimport EachMessage from \"./EachMessage\";\nimport Sidebar from \"./Sidebar\";\nimport {\n    Link\n} from \"react-router-dom\";\n\nimport io from 'socket.io-client';\n\nimport '../styles/message.css';\n\nexport default class Message extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            note: undefined,\n            active: 0,\n            activeUsers: []\n        }\n\n        this.socket = io.connect(require('./../utils/server').SERVER.URL, {\n            query: {\n                userName : localStorage.getItem('userName'),\n                userId: localStorage.getItem('userId')\n            }\n        });\n        this.socket.on('broadcast', (data) => {\n            this.fetchData();\n            this.setState({\n                active: data.clients.active,\n                activeUsers: data.clients.users\n            })\n        })\n\n        // socket.emit('newMessage');\n    }\n\n    renderList() {\n\n        return (\n            <div >\n                <div className=\"messageWrapper\">\n                    <div className=\"boxWrapper\">\n                        <div className=\"messageHeader\">\n                            <h2>General</h2>\n                            <button onClick={this.fetchData}>\n                                <img src=\"./images/Paomedia-Small-N-Flat-Sign-sync.ico\" alt=\"Refresh\"></img>\n                            </button>\n                            <p>\n                                {this.state.active + \" Online User\"}\n                            </p>\n                        </div>\n                        <div className=\"messageScroller\" id=\"messageScroller\">\n\n                            <div style={{ textAlign: \"center\", padding: \"10em 0em 5em 0em\", borderBottom: \"1px solid grey\", background: \"url('./images/1.webp') no-repeat\" }}>\n                                This is start of the conversation\n                            </div>\n{\n\n                                // console.log(this.state.data)\n}\n                            {\n                                Array.isArray(this.state.data) ? (\n                                    this.state.data.map((msg) => {\n                                        return (<EachMessage key={msg.id} message={msg} fetchData={this.fetchData} />);\n                                    })\n                                )\n                                : (\n                                    <div style={{width:'100%', margin:'2em auto', textAlign:'center'}}>\n                                        No Messages\n                                    </div>\n                                )\n                            }\n                            {\n                                this.state.note ? this.state.note : \"\"\n                            }\n                        </div>\n                        <div className=\"messageBase\">\n                            <form method=\"POST\" onSubmit={this.submitHandler} encType=\"multipart/form-data\">\n                                <input type=\"text\" name=\"message\" placeholder=\"Type message...\" />\n                                {/* <input type=\"file\" name=\"image\" /> */}\n                                <button type=\"submit\">\n                                    <img src=\"./images/paper-planes-3128885_960_720.png\" alt=\"Send\" />\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <Sidebar activeUsers={this.state.activeUsers}/>\n            </div>\n        );\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n\n        Axios.post(SERVER.URL + \"/message/send\", { senderId: 6, text: e.target.message.value }, {\n            headers: {\n                'token': localStorage.getItem('token') || ''\n            }\n        })\n            .then(res => {\n                this.fetchData();\n                // socket.emit\n            })\n            .catch(res => {\n                this.setState({\n                    data: [...this.state.data, { id: 0, time: \"\", text: JSON.stringify(res.message), senderName: \"Message Failed to Send\" }],\n                    note: localStorage.getItem('token') ? undefined : (\n                        <div style={{ margin: \"1em auto\", maxWidth: \"7.5em\" }}>\n                            <Link to=\"/signin\">\n                                <div className=\"btn\">\n                                    Signin\n                                </div>\n                            </Link>\n                        </div>\n                    )\n                })\n            })\n\n        e.target.message.value = \"\";\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderList()}\n            </React.Fragment>\n        )\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData = () => {\n        Axios.get(SERVER.URL + \"/message\", {\n            headers: { 'token': localStorage.getItem('token') || '' }\n        })\n            .then(res => {\n                this.setState({\n                    data: res.data.data\n                })\n            })\n            .catch(res => {\n                this.setState({\n                    data: []\n                })\n            })\n    }\n\n\n\n    componentDidUpdate() {\n        const messageScroller = document.getElementById('messageScroller');\n        messageScroller.scrollTop = messageScroller.scrollHeight;\n    }\n\n    componentWillUnmount(){\n        this.socket.disconnect();\n    }\n\n}","import React from \"react\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport \"./../styles/home.css\";\n\nexport default class Home extends React.Component {\n\n    render(){\n\n        return (\n            <section>\n                <div className=\"info\">\n                    <h1>\n                        MessageAll\n                    </h1>\n                        <p>\n                            MessageAll is a great substitute for regular SMS text messaging\n                    </p>\n                    <Link to=\"/message\">\n                        <div className=\"btn\">\n                            Start Now\n                    </div>\n                    </Link>\n\n                    {\n                        localStorage.getItem('token') ? (\n                            <Link to=\"/logout\">\n                                <div className=\"btn secondary\">\n                                    Logout\n                                </div>                                \n                            </Link>\n                        ) : (\n\n                            <Link to=\"/signin\">\n                                <div className=\"btn secondary\">\n                                    Join Us\n                                </div>\n                            </Link>\n                        )\n                    }\n                </div>\n            </section>\n        )\n    }\n}","import React from \"react\";\nimport Axios from \"axios\";\nimport { SERVER } from \"../utils/server\";\nimport {\n    Link\n} from \"react-router-dom\";\n\nimport './../styles/user.css';\n\nexport default class User extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            id: window.location.pathname.slice(6) || localStorage.getItem('userId'),\n            profile: {},\n            err: undefined,\n            msg: undefined,\n            pwErr: undefined\n        }\n    }\n\n    componentDidMount() {\n        this.fetchProfile();\n    }\n\n    fetchProfile = () => {\n        Axios.get(SERVER.URL + \"/user/\" + this.state.id)\n            .then(result => {\n                this.setState({\n                    profile: result.data.profile\n                })\n            })\n            .catch(result => {\n                this.setState({\n                    err: result,\n                    profile: null\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"user\">\n                {\n                    !localStorage.getItem('token') ? this.props.history.push('/signin') : this.userProfile()\n                }\n            </div>\n        )\n    }\n\n    userProfile() {\n        return (\n            <React.Fragment>\n                {\n                    !this.state.profile ? this.props.history.push('/NotFound') : (\n\n                        <div className=\"profile\">\n                            <div className=\"info\">\n                                <div className=\"home\">\n                                    <Link to=\"/\"><img src=\"/images/flat-blue-home-icon-4.png\" alt=\"Home\" /></Link>\n                                </div>\n                                <div className=\"logout\">\n                                    <Link to=\"/logout\"><img src=\"/images/276363.png\" alt=\"Logout\" /></Link>\n                                </div>\n\n                                <h2 style={{ textShadow: '1px 2px 5px #23a4ee' }}>{this.state.profile.firstName + \" \" + this.state.profile.lastName}</h2>\n                                <div style={{ width: '50%', float: 'right' }}>\n                                    <img src=\"/images/depositphotos_59095529-stock-illustration-profile-icon-male-avatar.jpg\" alt=\"Profile\" />\n                                </div>\n                                <div style={{ width: '50%', display: 'inline-block', textAlign: 'left' }}>\n                                    <h3 style={{ textDecoration: 'underline' }}> Information</h3>\n                                    <table>\n                                        <tbody>\n                                            <tr>\n                                                <td>Name: </td>\n                                                <td>{this.state.profile.firstName + \" \" + this.state.profile.lastName}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Address: </td>\n                                                <td>{this.state.profile.address}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email: </td>\n                                                <td>{this.state.profile.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Role: </td>\n                                                <td>{this.state.profile.role}</td>\n                                            </tr>\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                            {this.state.id === localStorage.getItem('userId') ? this.updateProfile() : this.privateMessage()}\n                        </div>\n                    )\n                }\n            </React.Fragment>\n        )\n    }\n\n    updateProfile() {\n        return (\n            <div className=\"base\" style={{ textAlign: 'left', maxWidth: '580px', padding: '2em', border: '1px solid grey', borderRadius: '1em', margin: '0px auto' }}>\n                <h3 style={{ textAlign: 'center', }}>Change Profile Information</h3>\n                <form method=\"POST\" onSubmit={this.submitHandler} onReset={this.resetHandler}>\n                    <label htmlFor=\"firstName\">First Name </label>\n                    <input required type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" value={this.state.profile.firstName || ''} onChange={this.changeHandler} />\n                    <label htmlFor=\"lastName\">Last Name </label>\n                    <input required type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={this.state.profile.lastName || ''} onChange={this.changeHandler} />\n                    <label htmlFor=\"address\">Address </label>\n                    <input required type=\"text\" name=\"address\" id=\"address\" placeholder=\"Address\" value={this.state.profile.address || ''} onChange={this.changeHandler} />\n                    <label htmlFor=\"email\">Email </label>\n                    <input required type=\"email\" name=\"email\" id=\"email\" placeholder=\"First Name\" value={this.state.profile.email || ''} onChange={this.changeHandler} />\n                    {this.state.err ? <h4 style={{ color: '#e33', marginTop: '0px' }}>{this.state.err}</h4> : ''}\n\n                    <button type=\"submit\" className='btn'>Save Change</button>\n                    <button type=\"reset\" className='btn secondary'>Cancel</button>\n                </form>\n\n                <div style={{ height: '2em', borderBottom: '1px solid grey' }}>\n                </div>\n\n                <h3 style={{ textAlign: 'center', }}>Change Password</h3>\n                <form method=\"POST\" onSubmit={this.passwordChangeHandler} >\n                    <label htmlFor=\"password\">New Password </label>\n                    <input required type=\"password\" minLength=\"8\" name=\"password\" id=\"password\" placeholder=\"New Password\" />\n                    <label htmlFor=\"password2\">Confirm New Password </label>\n                    <input required type=\"password\" minLength=\"8\" name=\"password2\" id=\"password2\" placeholder=\"Confirm New Password\" />\n                    {this.state.pwErr ? <h4 style={{color:'#e33', marginTop:'0px'}}>{this.state.pwErr}</h4> : ''}\n                    <button type=\"submit\" className='btn' style={{ width: '100%' }}>Change Password</button>\n                </form>\n            </div>\n        )\n    }\n\n    passwordChangeHandler = e => {\n        e.preventDefault();\n        // if(e.target.password.value.toString().length < 8)\n        if (e.target.password.value === e.target.password2.value) {\n            this.setState({\n                pwErr: undefined\n            });\n            Axios.patch(SERVER.URL + '/user/' + this.state.id, {\n                headers: { 'token': localStorage.getItem('token') || '' },\n                data: e.target.password.value\n            })\n                .then(result => {\n                    document.getElementById('password').value = '';\n                    document.getElementById('password2').value = '';\n                    this.setState({\n                        pwErr: \"Password Changed successfully!\"\n                    });\n                })\n                .catch((err) => {\n                    this.setState({\n                        pwErr: \"Failed to change password! Try again later... (\" + err + \")\"\n                    });\n                })\n\n        } else {\n            this.setState({\n                pwErr: \"Password don't match! Try again...\"\n            });\n        }\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n        let valid = 1; //TODO\n\n        if (valid) {\n            this.setState({\n                err: undefined\n            });\n            Axios.put(SERVER.URL + '/user/' + this.state.id, {\n                headers: { 'token': localStorage.getItem('token') || '' },\n                data: {\n                    firstName: e.target.firstName.value,\n                    lastName: e.target.lastName.value,\n                    address: e.target.address.value,\n                    email: e.target.email.value,\n                }\n                })\n                .then(result => {\n                    this.setState({\n                        err: \"Profile updated successfully! (Re-Login if you changed your email)\"\n                    });\n                })\n                .catch((err) => {\n                    this.setState({\n                        err: \"Failed to update profile! Try again later... (\"+ err +\")\"\n                    });\n                })\n\n        } else {\n            this.setState({\n                err : \"Invalid data provided!\"\n            });\n        }\n    }\n\n    resetHandler = e => {\n        this.fetchProfile();\n    }\n\n    changeHandler = e => {\n        let target = e.target.name;\n        this.setState({\n            profile: {\n                ...this.state.profile,\n                [target]: e.target.value\n            }\n        });\n    }\n\n    privateMessage() {\n        return (\n            <div className=\"base\" style={{ textAlign: 'left', maxWidth: '580px', padding: '2em', border: '1px solid grey', borderRadius: '1em', margin: '0px auto' }}>\n                Private Message Not Avaliable, find in public message: <Link to='/message'>Click Here!</Link>\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nexport default (props) =>{\n    localStorage.clear('token');\n    return (\n        <React.Fragment>\n        {    \n            props.history.push('/signin')\n        }\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\n\nexport default function NotFound(){\n    return (\n        <div style={{textAlign:'center', padding:'20%'}}>\n            <h1>404 Not Found!</h1>\n            <p>\n                The page you are searching is not found!\n            </p>\n            <Link to=\"/home\">Go To Home</Link>\n        </div>\n    )\n}","import React from 'react';\n\nimport './App.css';\nimport Signup from './components/Signup';\nimport Signin from './components/Signin';\nimport Message from './components/Message';\nimport Home from './components/Home';\nimport User from './components/User';\nimport Logout from './components/Logout';\nimport NotFound from './components/NotFound'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      err: \"\"\n    }\n  }\n\n\n  render() {\n\n    return (\n      <Router basename={require('./config').basename}>\n        {console.log(require('./config').basename)}\n\n        <Switch>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/message\" component={Message} />\n          <Route path=\"/user\" component={User} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/\" component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n\n  setPage = (page) => {\n    \n    if (this.state.page !== page) {\n      \n      this.setState({\n        page: page\n      });\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","let env_mode =process.env.ENV_MODE ||'production';\nlet config={};\nif(env_mode ==='dev'){\n    config = {\n        basename: '',\n        dbname: '',\n        host: '',\n        port: '',\n\n    };\n}\n    else{\n    config = {\n        basename: 'travis-messageall',\n        dbname: '',\n        host: '',\n        port: '',\n\n    };\n}\n\nmodule.exports=config;\n","export const SERVER = {\n    // URL: 'http://localhost:4000',\n\n    URL: 'https://messageall.herokuapp.com',\n}"],"sourceRoot":""}